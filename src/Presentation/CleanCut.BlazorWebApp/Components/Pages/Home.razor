@page "/"
@using CleanCut.Application.DTOs
@using CleanCut.BlazorWebApp.Services
@inject ILogger<Home> Logger
@inject IUserApiService UserApi
@inject IProductApiService ProductApi
@inject NavigationManager Navigation
@rendermode @(new InteractiveServerRenderMode(prerender: false))

<PageTitle>Dashboard - CleanCut</PageTitle>

<div class="container-fluid">
    <!-- Welcome Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="display-6 fw-bold text-primary">
                        <i class="fas fa-tachometer-alt me-2"></i>Dashboard
                    </h1>
                    <p class="text-muted">Welcome to CleanCut Management System</p>
                </div>
                <div class="text-end">
                    <small class="text-muted">Last updated: @DateTime.Now.ToString("MMM dd, yyyy HH:mm")</small>
                </div>
            </div>
        </div>
    </div>

    @if (IsLoading)
    {
        <div class="text-center py-5">
            <div class="spinner-border spinner-border-lg" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-3 text-muted">Loading dashboard...</p>
        </div>
    }
    else
    {
        <!-- Statistics Cards -->
        <div class="row mb-4">
            <div class="col-md-6 col-xl-3 mb-3">
                <div class="card border-0 shadow-sm h-100">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div class="flex-shrink-0">
                                <div class="rounded-circle bg-primary p-3">
                                    <i class="fas fa-users fa-lg text-white"></i>
                                </div>
                            </div>
                            <div class="flex-grow-1 ms-3">
                                <div class="fw-bold text-primary fs-4">@TotalUsers</div>
                                <div class="text-muted">Total Users</div>
                                <small class="text-success">
                                    <i class="fas fa-user-check me-1"></i>@ActiveUsers Active
                                </small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-6 col-xl-3 mb-3">
                <div class="card border-0 shadow-sm h-100">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div class="flex-shrink-0">
                                <div class="rounded-circle bg-success p-3">
                                    <i class="fas fa-box fa-lg text-white"></i>
                                </div>
                            </div>
                            <div class="flex-grow-1 ms-3">
                                <div class="fw-bold text-success fs-4">@TotalProducts</div>
                                <div class="text-muted">Total Products</div>
                                <small class="text-success">
                                    <i class="fas fa-check me-1"></i>@AvailableProducts Available
                                </small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-6 col-xl-3 mb-3">
                <div class="card border-0 shadow-sm h-100">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div class="flex-shrink-0">
                                <div class="rounded-circle bg-info p-3">
                                    <i class="fas fa-dollar-sign fa-lg text-white"></i>
                                </div>
                            </div>
                            <div class="flex-grow-1 ms-3">
                                <div class="fw-bold text-info fs-4">@TotalValue.ToString("C0")</div>
                                <div class="text-muted">Total Value</div>
                                <small class="text-info">
                                    <i class="fas fa-chart-line me-1"></i>Portfolio Value
                                </small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-6 col-xl-3 mb-3">
                <div class="card border-0 shadow-sm h-100">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div class="flex-shrink-0">
                                <div class="rounded-circle bg-warning p-3">
                                    <i class="fas fa-chart-bar fa-lg text-white"></i>
                                </div>
                            </div>
                            <div class="flex-grow-1 ms-3">
                                <div class="fw-bold text-warning fs-4">@AverageProductsPerUser.ToString("F1")</div>
                                <div class="text-muted">Avg Products/User</div>
                                <small class="text-warning">
                                    <i class="fas fa-calculator me-1"></i>Performance
                                </small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Quick Actions -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-white">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-rocket me-2"></i>Quick Actions
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row g-3">
                            <div class="col-md-6 col-lg-3">
                                <button type="button" class="btn btn-primary w-100 p-3" @onclick="NavigateToCreateUser">
                                    <i class="fas fa-user-plus fa-2x d-block mb-2"></i>
                                    <span class="fw-bold">Add User</span>
                                </button>
                            </div>
                            <div class="col-md-6 col-lg-3">
                                <button type="button" class="btn btn-success w-100 p-3" @onclick="NavigateToCreateProduct">
                                    <i class="fas fa-plus-circle fa-2x d-block mb-2"></i>
                                    <span class="fw-bold">Add Product</span>
                                </button>
                            </div>
                            <div class="col-md-6 col-lg-3">
                                <button type="button" class="btn btn-info w-100 p-3" @onclick="NavigateToManageUsers">
                                    <i class="fas fa-users fa-2x d-block mb-2"></i>
                                    <span class="fw-bold">Manage Users</span>
                                </button>
                            </div>
                            <div class="col-md-6 col-lg-3">
                                <button type="button" class="btn btn-warning w-100 p-3" @onclick="NavigateToManageProducts">
                                    <i class="fas fa-box fa-2x d-block mb-2"></i>
                                    <span class="fw-bold">Manage Products</span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Recent Activity -->
        <div class="row">
            <div class="col-lg-8 mb-4">
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-white d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-history me-2"></i>Recent Products
                        </h5>
                        <button type="button" class="btn btn-sm btn-outline-primary" 
                                @onclick="NavigateToAllProducts">
                            View All
                        </button>
                    </div>
                    <div class="card-body">
                        @if (RecentProducts.Any())
                        {
                            @foreach (var product in RecentProducts.Take(5))
                            {
                                <div class="d-flex align-items-center py-2 border-bottom">
                                    <div class="avatar-small me-3">
                                        <i class="fas fa-box"></i>
                                    </div>
                                    <div class="flex-grow-1">
                                        <div class="fw-bold">@product.Name</div>
                                        <small class="text-muted">by @(product.User?.FirstName ?? "Unknown") • @product.CreatedAt.ToString("MMM dd")</small>
                                    </div>
                                    <div class="text-success fw-bold">@product.Price.ToString("C")</div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="text-center py-3">
                                <i class="fas fa-box fa-2x text-muted mb-2"></i>
                                <p class="text-muted">No products yet</p>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="col-lg-4 mb-4">
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-white d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-users me-2"></i>Active Users
                        </h5>
                        <button type="button" class="btn btn-sm btn-outline-info" 
                                @onclick="NavigateToAllUsers">
                            View All
                        </button>
                    </div>
                    <div class="card-body">
                        @if (ActiveUsersList.Any())
                        {
                            @foreach (var user in ActiveUsersList.Take(5))
                            {
                                <div class="d-flex align-items-center py-2">
                                    <div class="avatar-small-user me-3">
                                        @user.FirstName.Substring(0, 1).ToUpper()
                                    </div>
                                    <div class="flex-grow-1">
                                        <div class="fw-bold">@user.FirstName @user.LastName</div>
                                        <small class="text-muted">@user.Email</small>
                                    </div>
                                    <div class="text-success">
                                        <i class="fas fa-check-circle"></i>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="text-center py-3">
                                <i class="fas fa-users fa-2x text-muted mb-2"></i>
                                <p class="text-muted">No active users</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<style>
    .avatar-small {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background-color: #28a745;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
    }

    .avatar-small-user {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background-color: #0d6efd;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
    }
</style>

@code {
    private bool IsLoading { get; set; } = true;
    private List<UserDto> Users { get; set; } = new();
    private List<ProductDto> Products { get; set; } = new();

    // Dashboard statistics
    private int TotalUsers => Users.Count;
    private int ActiveUsers => Users.Count(u => u.IsActive);
    private int TotalProducts => Products.Count;
    private int AvailableProducts => Products.Count(p => p.IsAvailable);
    private decimal TotalValue => Products.Sum(p => p.Price);
    private double AverageProductsPerUser => TotalUsers > 0 ? (double)TotalProducts / TotalUsers : 0;

    // Recent data
    private List<ProductDto> RecentProducts => Products.OrderByDescending(p => p.CreatedAt).ToList();
    private List<UserDto> ActiveUsersList => Users.Where(u => u.IsActive).OrderByDescending(u => u.CreatedAt).ToList();

    protected override async Task OnInitializedAsync()
    {
        Logger.LogInformation("Dashboard loading");
        await LoadDashboardDataAsync();
    }

    private async Task LoadDashboardDataAsync()
    {
        IsLoading = true;
        try
        {
            // Load all users
            Users = await UserApi.GetAllUsersAsync();
            
            // Load all products from all users
            Products = new List<ProductDto>();
            foreach (var user in Users)
            {
                try
                {
                    var userProducts = await ProductApi.GetProductsByUserAsync(user.Id);
                    Products.AddRange(userProducts);
                }
                catch (Exception ex)
                {
                    Logger.LogWarning(ex, "Failed to load products for user {UserId}", user.Id);
                }
            }

            Logger.LogInformation("Dashboard loaded - {UserCount} users, {ProductCount} products", Users.Count, Products.Count);
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error loading dashboard data");
        }
        finally
        {
            IsLoading = false;
            StateHasChanged();
        }
    }

    // Navigation methods
    private void NavigateToCreateUser() => Navigation.NavigateTo("/users/create");
    private void NavigateToCreateProduct() => Navigation.NavigateTo("/products/create");
    private void NavigateToManageUsers() => Navigation.NavigateTo("/users/management");
    private void NavigateToManageProducts() => Navigation.NavigateTo("/products/management");
    private void NavigateToAllProducts() => Navigation.NavigateTo("/products/management");
    private void NavigateToAllUsers() => Navigation.NavigateTo("/users/management");
}
